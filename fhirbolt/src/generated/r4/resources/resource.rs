// Generated on 2022-07-12 by fhirbolt-codegen v0.1.0
#[derive(Debug, Clone, serde :: Serialize)]
#[serde(tag = "resourceType")]
pub enum Resource {
    AccountGuarantor(Box<super::AccountGuarantor>),
    ActivityDefinitionDynamicValue(Box<super::ActivityDefinitionDynamicValue>),
    AdverseEventSuspectEntityCausality(Box<super::AdverseEventSuspectEntityCausality>),
    AllergyIntoleranceReaction(Box<super::AllergyIntoleranceReaction>),
    AppointmentParticipant(Box<super::AppointmentParticipant>),
    AppointmentResponse(Box<super::AppointmentResponse>),
    AuditEventEntityDetail(Box<super::AuditEventEntityDetail>),
    Basic(Box<super::Basic>),
    Binary(Box<super::Binary>),
    BiologicallyDerivedProductStorage(Box<super::BiologicallyDerivedProductStorage>),
    BodyStructure(Box<super::BodyStructure>),
    BundleEntryRequest(Box<super::BundleEntryRequest>),
    CapabilityStatementRestSecurity(Box<super::CapabilityStatementRestSecurity>),
    CarePlanActivityDetail(Box<super::CarePlanActivityDetail>),
    CareTeamParticipant(Box<super::CareTeamParticipant>),
    CatalogEntryRelatedEntry(Box<super::CatalogEntryRelatedEntry>),
    ChargeItemPerformer(Box<super::ChargeItemPerformer>),
    ChargeItemDefinitionApplicability(Box<super::ChargeItemDefinitionApplicability>),
    ClaimCareTeam(Box<super::ClaimCareTeam>),
    ClaimResponseError(Box<super::ClaimResponseError>),
    ClinicalImpressionInvestigation(Box<super::ClinicalImpressionInvestigation>),
    CodeSystemConceptProperty(Box<super::CodeSystemConceptProperty>),
    CommunicationPayload(Box<super::CommunicationPayload>),
    CommunicationRequestPayload(Box<super::CommunicationRequestPayload>),
    CompartmentDefinitionResource(Box<super::CompartmentDefinitionResource>),
    CompositionSection(Box<super::CompositionSection>),
    ConceptMapGroupElementTargetDependsOn(Box<super::ConceptMapGroupElementTargetDependsOn>),
    ConditionEvidence(Box<super::ConditionEvidence>),
    ConsentVerification(Box<super::ConsentVerification>),
    ContractFriendly(Box<super::ContractFriendly>),
    CoverageCostToBeneficiaryException(Box<super::CoverageCostToBeneficiaryException>),
    CoverageEligibilityRequestItemDiagnosis(Box<super::CoverageEligibilityRequestItemDiagnosis>),
    CoverageEligibilityResponseInsuranceItemBenefit(
        Box<super::CoverageEligibilityResponseInsuranceItemBenefit>,
    ),
    DetectedIssueEvidence(Box<super::DetectedIssueEvidence>),
    DeviceDeviceName(Box<super::DeviceDeviceName>),
    DeviceDefinitionUdiDeviceIdentifier(Box<super::DeviceDefinitionUdiDeviceIdentifier>),
    DeviceMetricCalibration(Box<super::DeviceMetricCalibration>),
    DeviceRequestParameter(Box<super::DeviceRequestParameter>),
    DeviceUseStatement(Box<super::DeviceUseStatement>),
    DiagnosticReportMedia(Box<super::DiagnosticReportMedia>),
    DocumentManifestRelated(Box<super::DocumentManifestRelated>),
    DocumentReferenceRelatesTo(Box<super::DocumentReferenceRelatesTo>),
    EffectEvidenceSynthesisResultsByExposure(Box<super::EffectEvidenceSynthesisResultsByExposure>),
    EncounterDiagnosis(Box<super::EncounterDiagnosis>),
    Endpoint(Box<super::Endpoint>),
    EnrollmentRequest(Box<super::EnrollmentRequest>),
    EnrollmentResponse(Box<super::EnrollmentResponse>),
    EpisodeOfCareDiagnosis(Box<super::EpisodeOfCareDiagnosis>),
    EventDefinition(Box<super::EventDefinition>),
    Evidence(Box<super::Evidence>),
    EvidenceVariableCharacteristic(Box<super::EvidenceVariableCharacteristic>),
    ExampleScenarioActor(Box<super::ExampleScenarioActor>),
    ExplanationOfBenefitSupportingInfo(Box<super::ExplanationOfBenefitSupportingInfo>),
    FamilyMemberHistoryCondition(Box<super::FamilyMemberHistoryCondition>),
    Flag(Box<super::Flag>),
    GoalTarget(Box<super::GoalTarget>),
    GraphDefinitionLinkTargetCompartment(Box<super::GraphDefinitionLinkTargetCompartment>),
    GroupMember(Box<super::GroupMember>),
    GuidanceResponse(Box<super::GuidanceResponse>),
    HealthcareServiceEligibility(Box<super::HealthcareServiceEligibility>),
    ImagingStudySeriesPerformer(Box<super::ImagingStudySeriesPerformer>),
    ImmunizationPerformer(Box<super::ImmunizationPerformer>),
    ImmunizationEvaluation(Box<super::ImmunizationEvaluation>),
    ImmunizationRecommendationRecommendationDateCriterion(
        Box<super::ImmunizationRecommendationRecommendationDateCriterion>,
    ),
    ImplementationGuideManifestResource(Box<super::ImplementationGuideManifestResource>),
    InsurancePlanContact(Box<super::InsurancePlanContact>),
    InvoiceParticipant(Box<super::InvoiceParticipant>),
    Library(Box<super::Library>),
    LinkageItem(Box<super::LinkageItem>),
    ListEntry(Box<super::ListEntry>),
    LocationHoursOfOperation(Box<super::LocationHoursOfOperation>),
    MeasureSupplementalData(Box<super::MeasureSupplementalData>),
    MeasureReportGroupPopulation(Box<super::MeasureReportGroupPopulation>),
    Media(Box<super::Media>),
    MedicationIngredient(Box<super::MedicationIngredient>),
    MedicationAdministrationDosage(Box<super::MedicationAdministrationDosage>),
    MedicationDispenseSubstitution(Box<super::MedicationDispenseSubstitution>),
    MedicationKnowledgeKinetics(Box<super::MedicationKnowledgeKinetics>),
    MedicationRequestDispenseRequestInitialFill(
        Box<super::MedicationRequestDispenseRequestInitialFill>,
    ),
    MedicationStatement(Box<super::MedicationStatement>),
    MedicinalProductSpecialDesignation(Box<super::MedicinalProductSpecialDesignation>),
    MedicinalProductAuthorizationJurisdictionalAuthorization(
        Box<super::MedicinalProductAuthorizationJurisdictionalAuthorization>,
    ),
    MedicinalProductContraindicationOtherTherapy(
        Box<super::MedicinalProductContraindicationOtherTherapy>,
    ),
    MedicinalProductIndicationOtherTherapy(Box<super::MedicinalProductIndicationOtherTherapy>),
    MedicinalProductIngredientSubstance(Box<super::MedicinalProductIngredientSubstance>),
    MedicinalProductInteractionInteractant(Box<super::MedicinalProductInteractionInteractant>),
    MedicinalProductManufactured(Box<super::MedicinalProductManufactured>),
    MedicinalProductPackagedPackageItem(Box<super::MedicinalProductPackagedPackageItem>),
    MedicinalProductPharmaceuticalRouteOfAdministrationTargetSpeciesWithdrawalPeriod(
        Box<
            super::MedicinalProductPharmaceuticalRouteOfAdministrationTargetSpeciesWithdrawalPeriod,
        >,
    ),
    MedicinalProductUndesirableEffect(Box<super::MedicinalProductUndesirableEffect>),
    MessageDefinitionFocus(Box<super::MessageDefinitionFocus>),
    MessageHeaderDestination(Box<super::MessageHeaderDestination>),
    MolecularSequenceReferenceSeq(Box<super::MolecularSequenceReferenceSeq>),
    NamingSystemUniqueId(Box<super::NamingSystemUniqueId>),
    NutritionOrderOralDietTexture(Box<super::NutritionOrderOralDietTexture>),
    ObservationReferenceRange(Box<super::ObservationReferenceRange>),
    ObservationDefinitionQuantitativeDetails(Box<super::ObservationDefinitionQuantitativeDetails>),
    OperationDefinitionParameterBinding(Box<super::OperationDefinitionParameterBinding>),
    OperationOutcomeIssue(Box<super::OperationOutcomeIssue>),
    OrganizationContact(Box<super::OrganizationContact>),
    OrganizationAffiliation(Box<super::OrganizationAffiliation>),
    ParametersParameter(Box<super::ParametersParameter>),
    PatientContact(Box<super::PatientContact>),
    PaymentNotice(Box<super::PaymentNotice>),
    PaymentReconciliationProcessNote(Box<super::PaymentReconciliationProcessNote>),
    PersonLink(Box<super::PersonLink>),
    PlanDefinitionActionRelatedAction(Box<super::PlanDefinitionActionRelatedAction>),
    PractitionerQualification(Box<super::PractitionerQualification>),
    PractitionerRoleAvailableTime(Box<super::PractitionerRoleAvailableTime>),
    ProcedureFocalDevice(Box<super::ProcedureFocalDevice>),
    ProvenanceEntity(Box<super::ProvenanceEntity>),
    QuestionnaireItemInitial(Box<super::QuestionnaireItemInitial>),
    QuestionnaireResponseItemAnswer(Box<super::QuestionnaireResponseItemAnswer>),
    RelatedPersonCommunication(Box<super::RelatedPersonCommunication>),
    RequestGroupActionRelatedAction(Box<super::RequestGroupActionRelatedAction>),
    ResearchDefinition(Box<super::ResearchDefinition>),
    ResearchElementDefinitionCharacteristic(Box<super::ResearchElementDefinitionCharacteristic>),
    ResearchStudyObjective(Box<super::ResearchStudyObjective>),
    ResearchSubject(Box<super::ResearchSubject>),
    RiskAssessmentPrediction(Box<super::RiskAssessmentPrediction>),
    RiskEvidenceSynthesisCertaintyCertaintySubcomponent(
        Box<super::RiskEvidenceSynthesisCertaintyCertaintySubcomponent>,
    ),
    Schedule(Box<super::Schedule>),
    SearchParameterComponent(Box<super::SearchParameterComponent>),
    ServiceRequest(Box<super::ServiceRequest>),
    Slot(Box<super::Slot>),
    SpecimenContainer(Box<super::SpecimenContainer>),
    SpecimenDefinitionTypeTestedHandling(Box<super::SpecimenDefinitionTypeTestedHandling>),
    StructureDefinitionSnapshot(Box<super::StructureDefinitionSnapshot>),
    StructureMapStructure(Box<super::StructureMapStructure>),
    SubscriptionChannel(Box<super::SubscriptionChannel>),
    SubstanceInstance(Box<super::SubstanceInstance>),
    SubstanceNucleicAcidSubunitSugar(Box<super::SubstanceNucleicAcidSubunitSugar>),
    SubstancePolymerMonomerSetStartingMaterial(
        Box<super::SubstancePolymerMonomerSetStartingMaterial>,
    ),
    SubstanceProteinSubunit(Box<super::SubstanceProteinSubunit>),
    SubstanceReferenceInformationGeneElement(Box<super::SubstanceReferenceInformationGeneElement>),
    SubstanceSourceMaterialFractionDescription(
        Box<super::SubstanceSourceMaterialFractionDescription>,
    ),
    SubstanceSpecificationStructureIsotopeMolecularWeight(
        Box<super::SubstanceSpecificationStructureIsotopeMolecularWeight>,
    ),
    SupplyDeliverySuppliedItem(Box<super::SupplyDeliverySuppliedItem>),
    SupplyRequestParameter(Box<super::SupplyRequestParameter>),
    TaskRestriction(Box<super::TaskRestriction>),
    TerminologyCapabilitiesTranslation(Box<super::TerminologyCapabilitiesTranslation>),
    TestReportParticipant(Box<super::TestReportParticipant>),
    TestScriptOrigin(Box<super::TestScriptOrigin>),
    ValueSetComposeIncludeConceptDesignation(Box<super::ValueSetComposeIncludeConceptDesignation>),
    VerificationResultPrimarySource(Box<super::VerificationResultPrimarySource>),
    VisionPrescriptionLensSpecificationPrism(Box<super::VisionPrescriptionLensSpecificationPrism>),
    MetadataResource(Box<super::MetadataResource>),
}
